
@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Incident View</title>

    <!-- Google Font: Source Sans Pro -->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700&display=fallback">
    <!-- Font Awesome Icons -->
    <link rel="stylesheet" href="~/Content/plugins/fontawesome-free/css/all.min.css">
    <!-- DataTables -->
    <link rel="stylesheet" href="~/Content/plugins/datatables-bs4/css/dataTables.bootstrap4.min.css">
    <link rel="stylesheet" href="~/Content/plugins/datatables-responsive/css/responsive.bootstrap4.min.css">
    <!-- Ionicons -->
    @*<link rel="stylesheet" href="https://code.ionicframework.com/ionicons/2.0.1/css/ionicons.min.css">*@
    <!-- Theme style -->
    <link rel="stylesheet" href="~/Content/dist/css/adminlte.min.css">
    <!-- summernote -->
    <link rel="stylesheet" href="~/Content/plugins/summernote/summernote-bs4.min.css">
</head>
<body class="hold-transition sidebar-mini">
    <div class="wrapper">

        <!-- Navbar -->
        <nav class="main-header navbar navbar-expand navbar-white navbar-light">
            <!-- Left navbar links -->
            @Html.Partial("_Menu")
            <!-- SEARCH FORM -->
            <!-- Right navbar links -->
            <ul class="navbar-nav ml-auto">
                @Html.Partial("_Notifications")
                
                <li class="nav-item">
                    <a class="nav-link" data-widget="control-sidebar" data-slide="true" href="#" role="button">
                        <i class="fas fa-th-large"></i>
                    </a>
                </li>
            </ul>
        </nav>
        <!-- /.navbar -->
        <!-- Main Sidebar Container -->
        @Html.Partial("_SideBar")

        <!-- Content Wrapper. Contains page content -->
        <div class="content-wrapper">
            <!-- Content Header (Page header) -->
            <div class="content-header">
                <div class="container-fluid">
                    @*<div class="row mb-2">
                            <div class="col-sm-6">
                                <h1 class="m-0 text-dark">Incident : 25</h1>
                            </div>
                            <div class="col-sm-6">
                                <ol class="breadcrumb float-sm-right">
                                    <li class="breadcrumb-item"><a href="#">App</a></li>
                                    <li class="breadcrumb-item active">Incident View</li>
                                </ol>
                            </div>
                        </div>*@
                </div><!-- /.container-fluid -->
            </div>
            <!-- /.content-header -->
            <!-- Main content -->
            <div class="content">
                <div class="container-fluid">
                    <div class="row">
                        <div id="vueApp01" class="col-lg-9">

                            <div id="baseInfoArea" class="card card-primary">
                                <div class="card-header">
                                    <h3 class="card-title">Base Info : Incident [&nbsp; <b> @Session["IncidentId"] </b> &nbsp;]</h3>
                                    <div class="card-tools">
                                        <button type="button" class="btn btn-tool" data-card-widget="collapse" data-toggle="tooltip" title="Collapse">
                                            <i class="fas fa-minus"></i>
                                        </button>
                                    </div>
                                </div>
                                <div class="card-body">
                                    <div class="row">
                                        <div class="col-md-4">
                                            <label>Created Date</label>
                                            <input class="form-control" type="text" placeholder="Created Date" :value="createdDateTime" disabled>
                                            <br>
                                            <label>Created Staff</label>
                                            <input class="form-control" type="text" placeholder="Created Staff" v-model="baseInfo.CreatedStaff" disabled>
                                            <br>
                                            <label>Status</label>
                                            <select class="form-control" v-model="baseInfo.Status">
                                                <option>Open</option>
                                                <option>Hold</option>
                                                <option>Queued</option>
                                                <option>Closed</option>
                                            </select>
                                            <br>
                                            <label>Category</label>
                                            <select class="form-control" v-model="baseInfo.Category">
                                                <option>...</option>
                                                <option>General</option>
                                                <option>Baggage</option>
                                                <option>Refund</option>
                                                <option>DateChange</option>
                                                <option>Complaint</option>
                                                <option>Other</option>
                                            </select>
                                            <br>
                                            <label>Priority</label>
                                            <select class="form-control" v-model="baseInfo.Type">
                                                <option>High</option>
                                                <option>Medium</option>
                                                <option>Low</option>
                                            </select>
                                        </div>
                                        <div class="col-md-8">
                                            <label>Base Subject</label>
                                            <input class="form-control" type="text" placeholder="Base Subject" v-model="baseInfo.BaseEmailSubject" disabled>
                                            <br>
                                            <label>Base Sender</label>
                                            <input class="form-control" type="text" placeholder="Base Sender" v-model="baseInfo.BaseEmailSender" disabled>
                                            <br>
                                            <label>Special Remarks</label>
                                            <textarea class="form-control" placeholder="Remarks" rows="3" v-model="baseInfo.Remarks"></textarea>
                                            <br />
                                            <label>Add a Comment</label>
                                            <textarea id="commentText" class="form-control" placeholder="Add a Comment ..." rows="3"></textarea>
                                            <button class="btn btn-block btn-outline-primary btn-sm" onclick="FuncAddComment()">Save Comment</button>
                                        </div>
                                    </div>
                                </div><!-- /.card-body -->
                                <div class="row card-footer">
                                    <div class="col-md-10"></div>
                                    <div class="col-md-2">
                                        <button v-on:click="SaveBaseInfo" class="btn btn-block btn-success">Save</button>
                                    </div>
                                </div>
                            </div> <!--Gen Info-->

                            <div id="attachmentsArea" class="card card-info collapsed-card">
                                <div class="card-header">
                                    <h3 class="card-title">General Attachments</h3>

                                    <div class="card-tools">
                                        <button type="button" class="btn btn-tool" data-card-widget="collapse" data-toggle="tooltip" title="Expand">
                                            <i class="fas fa-minus"></i>
                                        </button>
                                    </div>
                                </div>
                                <div class="card-body p-0">
                                    <table class="table">
                                        <thead>
                                            <tr>
                                                <th>File Name</th>
                                                <th>File Size</th>
                                                <th>Uploaded By</th>
                                                <th></th>
                                            </tr>
                                        </thead>
                                        <tbody>

                                            @*<tr>
                                                <td>Functional-requirements.docx</td>
                                                <td>49.8005 kb</td>
                                                <td>18893</td>
                                                <td class="text-right py-0 align-middle">
                                                    <div class="btn-group btn-group-sm">
                                                        <a href="#" class="btn btn-info"><i class="fas fa-eye"></i></a>
                                                        <a href="#" class="btn btn-danger"><i class="fas fa-trash"></i></a>
                                                    </div>
                                                </td>
                                            <tr>
                                                <td>UAT.pdf</td>
                                                <td>28.4883 kb</td>
                                                <td>18893</td>
                                                <td class="text-right py-0 align-middle">
                                                    <div class="btn-group btn-group-sm">
                                                        <a href="#" class="btn btn-info"><i class="fas fa-eye"></i></a>
                                                        <a href="#" class="btn btn-danger"><i class="fas fa-trash"></i></a>
                                                    </div>
                                                </td>
                                            <tr>
                                                <td>Logo.png</td>
                                                <td>50.5190 kb</td>
                                                <td>18893</td>
                                                <td class="text-right py-0 align-middle">
                                                    <div class="btn-group btn-group-sm">
                                                        <a href="#" class="btn btn-info"><i class="fas fa-eye"></i></a>
                                                        <a href="#" class="btn btn-danger"><i class="fas fa-trash"></i></a>
                                                    </div>
                                                </td>
                                            <tr>
                                                <td>Contract-10_12_2014.docx</td>
                                                <td>44.9715 kb</td>
                                                <td>18893</td>
                                                <td class="text-right py-0 align-middle">
                                                    <div class="btn-group btn-group-sm">
                                                        <a href="#" class="btn btn-info"><i class="fas fa-eye"></i></a>
                                                        <a href="#" class="btn btn-danger"><i class="fas fa-trash"></i></a>
                                                    </div>
                                                </td>
                                            </tr>*@
                                            <tr v-for="item in items">
                                                <td>{{GetFileNameOnly(item.FileName)}}</td>
                                                <td>{{ GetFileSizeDynamic(item.SizeInBytes) }} </td>
                                                <td>{{item.CreatedStaff}}</td>
                                                <td class="text-right py-0 align-middle">
                                                    <div class="btn-group btn-group-sm">
                                                        <a v-bind:href=item.FileName target="_blank" class="btn btn-info"><i class="fas fa-eye"></i></a>
                                                        <a href="#" class="btn btn-danger"><i class="fas fa-trash"></i></a>
                                                    </div>
                                                </td>
                                            </tr>

                                        </tbody>
                                    </table>
                                </div> <!-- End Card-body -->

                                <div class="card-footer">
                                    <label>Add General attachment</label>
                                    <div class="input-group">
                                        <div class="custom-file">
                                            <input type="file" class="custom-file-input" id="InputFileAtch" onchange="FileUploadEvent()">
                                            <label class="custom-file-label" for="exampleInputFile">Choose file</label>
                                        </div>
                                        <div class="input-group-append">
                                            <span class="input-group-text">Upload</span>
                                        </div>
                                    </div>
                                </div>
                                <!-- /.card-body -->
                            </div> <!--Gen Attachments-->

                            <div class="card card-info collapsed-card">
                                <div class="card-header">
                                    <h3 class="card-title">Add OutLook Mails</h3>
                                    <div class="card-tools">
                                        <button type="button" class="btn btn-tool" data-card-widget="collapse" data-toggle="tooltip" title="Expand  ">
                                            <i class="fas fa-minus"></i>
                                        </button>
                                    </div>
                                </div>
                                <div class="card-body">
                                    <div class="row">
                                        <!-- Start  -->
                                        <div class="col-md-6">
                                            <div class="card card-warning">
                                                <div class="card-header">
                                                    <h3 class="card-title">Incoming E-Mails</h3>
                                                </div>
                                                <div class="card-body">
                                                    <div class="row">

                                                        <label>Drag or Browse</label>
                                                        <div class="input-group">
                                                            <div class="custom-file">
                                                                <input id="InputIncomingMail" type="file" class="custom-file-input" onchange="FileUploadEvent123('InputIncomingMail','In')">
                                                                <label id="InputIncomingMailLable" class="custom-file-label" for="exampleInputFile">Choose file</label>
                                                            </div>
                                                            <div class="input-group-append">
                                                                @*<span class="input-group-text" >Upload</span>*@
                                                            </div>
                                                        </div>


                                                    </div>
                                                </div>
                                                <!-- /.card-body -->
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="card card-success">
                                                <div class="card-header">
                                                    <h3 class="card-title">OutGoing E-Mails</h3>
                                                </div>
                                                <div class="card-body">
                                                    <div class="row">

                                                        <label>Drag or Browse</label>
                                                        <div class="input-group">
                                                            <div class="custom-file">
                                                                <input id="InputOutgoingMail" type="file" class="custom-file-input" onchange="FileUploadEvent123('InputOutgoingMail','Out')">
                                                                <label id="InputOutgoingMailLable" class="custom-file-label" for="exampleInputFile">Choose file</label>
                                                            </div>
                                                            <div class="input-group-append">
                                                                @*<span class="input-group-text">Upload</span>*@
                                                            </div>
                                                        </div>

                                                    </div>
                                                </div>
                                                <!-- /.card-body -->
                                            </div>
                                        </div>




                                    </div>
                                </div>
                                <!-- /.card-body -->
                            </div> <!-- Drag Files -->

                            <div id="sendResponseArea" class="card card-info collapsed-card">
                                <div class="card-header">
                                    <h3 class="card-title">Send Response via App</h3>
                                    <div class="card-tools">
                                        <button type="button" class="btn btn-tool" data-card-widget="collapse" data-toggle="tooltip" title="Expand">
                                            <i class="fas fa-minus"></i>
                                        </button>
                                    </div>
                                </div>
                                <div class="card-body">
                                    <div class="row">
                                        <div class="col-md-1">
                                            <label>Template</label>
                                        </div>
                                        <div class="col-md-3">
                                            <select class="form-control" v-on:change="TemplateIdChange" v-model="templateId">
                                                @*<option value="0">None</option>*@
                                                <option v-for="item in templateList" :value="item.Id">{{item.Name}}</option>
                                            </select>
                                        </div>
                                    </div><br />

                                    <div class="row">

                                        <div class="col-md-12">
                                            <div class="input-group">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text" style="width:70px"><i class="fas fa-envelope"></i>&nbsp;&nbsp; To</span>
                                                </div>
                                                <input id="ReplyToId" type="email" class="form-control" placeholder="To">
                                            </div>
                                            <div class="input-group">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text" style="width:70px"><i class="fas fa-envelope"></i>&nbsp;&nbsp; CC</span>
                                                </div>
                                                <input id="ReplyCCId" type="email" class="form-control" placeholder="CC">
                                            </div>
                                            <div class="input-group">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text" style="width:70px"><i class="fas fa-envelope"></i>&nbsp; BCC</span>
                                                </div>
                                                <input id="ReplyBCCId" type="email" class="form-control" placeholder="BCC">
                                            </div>
                                            <div class="input-group">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text" style="width:70px"> Subject </span>
                                                </div>
                                                <input id="ReplySubject" type="text" class="form-control" placeholder="Subject">
                                            </div>

                                            <div class="form-group">
                                                <textarea id="compose-textarea" class="form-control" style="height: 400px"></textarea>
                                            </div>
                                            @*<div class="form-group">
                    <p class="help-block">Max. 32MB</p>
                </div>*@
                                        </div>
                                    </div>
                                </div>
                                <!-- /.card-body -->
                                <div class="card-footer bg-white">
                                    <ul class="mailbox-attachments d-flex align-items-stretch clearfix">
                                        @*<li>
                                                <div class="mailbox-attachment-info">
                                                    <a href="#" class="mailbox-attachment-name"><i class="fas fa-paperclip"></i> Sep2014-report.pdf</a>
                                                    <span class="mailbox-attachment-size clearfix mt-1">
                                                        <span>1,245 KB</span>
                                                        <a href="#" class="btn btn-default btn-sm float-right"><i class="fas fa-times"></i></a>
                                                    </span>
                                                </div>
                                            </li>*@
                                        <li v-for="item in items">
                                            <div class="mailbox-attachment-info">
                                                <a href="#" class="mailbox-attachment-name"><i class="fas fa-paperclip"></i> {{GetFileNameOnly(item.FileName)}}</a>
                                                <span class="mailbox-attachment-size clearfix mt-1">
                                                    <span>{{ GetFileSizeDynamic(item.SizeInBytes) }}</span>
                                                    <a href="#" class="btn btn-default btn-sm float-right"><i class="fas fa-times"></i></a>
                                                </span>
                                            </div>
                                        </li>
                                    </ul>
                                </div> <!-- Attachments show area -->
                                <div class="card-footer">
                                    <div class="float-right">
                                        <div class="btn btn-default btn-file">
                                            <i class="fas fa-paperclip"></i> Add Attachment
                                            <input id="mailAttachment" type="file" name="attachment" v-on:change="FileUploadEventForMsg">
                                        </div>
                                        @*<button v-on:click="ReplyBtnEvent('rep')" type="button" class="btn btn-info"><i class="fas fa-envelope"></i> Send</button>*@
                                        <button v-on:click="ReplyBtnEvent('repAll')" type="button" class="btn btn-primary"><i class="far fa-envelope"></i> Send All</button>
                                    </div>
                                    <button type="button" class="btn btn-secondary" v-on:click="DiscardUnsavedMailInfo"><i class="fas fa-trash"></i> Discard</button>
                                </div>
                                <!-- /.card-footer -->
                            </div> <!-- /card : Respond via App -->

                            <div id="incidentLogsArea" class="card card-info">
                                <!-- New Card : Inc Logs -->
                                <div class="card-header">
                                    <h3 class="card-title">E-Mail Messages</h3>
                                    <div class="card-tools">
                                        <button type="button" class="btn btn-tool" data-card-widget="collapse" data-toggle="tooltip" title="Collapse">
                                            <i class="fas fa-minus"></i>
                                        </button>
                                    </div>
                                </div>
                                <div class="card-body">

                                    <div class="row">

                                        <div class="col-md-12">
                                            <!-- The time line -->
                                            <div class="timeline">
                                                <div class="timeline" v-for="log in logs">

                                                    <div class="time-label">
                                                        <span v-bind:class=log.EmailDirection>{{log.CreatedDate.split('T')[0]}} : [{{log.EmailSenderName}}]</span>
                                                    </div>
                                                    <!-- /.timeline-label -->
                                                    <!-- timeline item -->
                                                    <div>
                                                        <i class="fas fa-envelope bg-blue"></i>
                                                        <div class="timeline-item">
                                                            <span class="time">
                                                                <i class="fas fa-clock"></i> {{log.CreatedDate.split('T')[1]}} ({{log.CreatedDate.split('T')[0]}})
                                                                <br /> Staff : <b> {{log.CreatedStaffId}} </b><br /> [Log # : {{log.ID}}]
                                                            </span>
                                                            <h3 class="timeline-header">
                                                                <a href="#"> {{log.BaseEmailSubject}} </a><br />
                                                                <br />Sent By : {{log.EmailSender}}
                                                                <br />To : {{log.EmailTo}}
                                                                <br />CC List  : {{log.EmailCC}}
                                                                <br />BCC List : {{log.EmailBCC}}
                                                            </h3>
                                                            <div class="timeline-body">
                                                                @*if anything*@
                                                            </div>
                                                            <div class="timeline-footer">
                                                                <a class="btn btn-primary btn-sm" v-on:click="PreviewBtnEvent(log.MSGFilePath)" data-toggle="modal" data-target="#modal-info">Preview</a>
                                                                @*<a class="btn btn-info btn-sm" v-on:click="TestOpenMsg(log.MSGFilePath,log.IncidentId)">Open</a>*@
                                                                <a class="btn btn-info btn-sm" v-bind:href=log.MSGFilePath target="_blank" title="View">Open</a>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <!-- END timeline item -->
                                                </div>
                                                <div>
                                                    <i class="fas fa-clock bg-gray"></i>
                                                </div>
                                            </div> <!-- The time line -->
                                        </div>

                                    </div>
                                </div>
                                <!-- /.card-body -->
                            </div> <!-- /.card :Inc Log -->

                            <div class="card card-info" id="CommentArea">
                                <!-- New Card : Messages -->
                                <div class="card-header">
                                    <h3 class="card-title">Message Thread</h3>
                                    <div class="card-tools">
                                        <button type="button" class="btn btn-tool" data-card-widget="collapse" data-toggle="tooltip" title="Collapse">
                                            <i class="fas fa-minus"></i>
                                        </button>
                                    </div>
                                </div>
                                <div class="card-body">
                                    <div class="row">

                                        <div class="col-md-12">
                                            <!-- DIRECT CHAT SUCCESS -->
                                            <div class="card card-sucress cardutline direct-chat direct-chat-success shadow-sm">
                                                <!-- /.card-header : Not Needed -->
                                                <div class="card-body">
                                                    <!-- Conversations are loaded here -->
                                                    <div class="direct-chat-messages">
                                                        <!-- Message. Default to the left -->

                                                        <div class="direct-chat-msg" v-for="item in items">
                                                            <div class="direct-chat-infos clearfix">
                                                                <span class="direct-chat-name float-left">{{item.StaffId}}</span>
                                                                <span class="direct-chat-timestamp float-right">{{item.OtherInfo}}</span>
                                                            </div>
                                                            <!-- /.direct-chat-infos -->
                                                            <img class="direct-chat-img" src="~/Content//dist/img/user1-128x128.jpg" alt="User Img">
                                                            <!-- /.direct-chat-img -->
                                                            <div class="direct-chat-text">
                                                                {{item.Comment}}
                                                            </div>
                                                            <!-- /.direct-chat-text -->
                                                        </div>

                                                    </div>
                                                    <!--/.direct-chat-messages-->
                                                </div>
                                                <!-- /.card-body -->
                                            </div>
                                            <!--/.direct-chat -->
                                        </div>

                                    </div>
                                </div>
                                <!-- /.card-body -->
                            </div> <!-- /.card : Message Thread -->

                        </div>
                        <!-- /.col-md-6 -->
                        <div class="col-lg-3">
                            <div id="pnrInfoArea" class="card card-info">
                                <div class="card-header">
                                    <h3 class="card-title">PNR Info</h3>
                                    <div class="card-tools">
                                        <button type="button" class="btn btn-tool" data-card-widget="collapse" data-toggle="tooltip" title="Collapse">
                                            <i class="fas fa-minus"></i>
                                        </button>
                                    </div>
                                </div>

                                <div class="card-body p-0" style="background-color:#f9f7f0">
                                    <br />
                                    <div class="input-group mb-3">
                                        <input type="text" class="form-control rounded-0" placeholder="Enter PNR ..." v-model="pnr">
                                        <span class="input-group-append">
                                            <button v-on:click="GetPNRInfoDB" type="button" class="btn btn-block btn-outline-info" title="From App Database">CSP</button>
                                        </span> @*data-toggle="modal" data-target="#modal-pnr"*@
                                        <span class="input-group-append">
                                            <button v-on:click="GetPnrInfoRealTime" type="button" class="btn btn-block btn-outline-success" title="From Amadeus">RES</button>
                                        </span>
                                    </div>

                                        <ul class="nav nav-pills flex-column">
                                            <li class="nav-item active">
                                                <div class="nav-link">
                                                    <i class="fas fa-star"></i> Office Id {{sep}} {{pnrInfo.OfficeId}}
                                                </div>
                                            </li>
                                            <li class="nav-item">
                                                <div class="nav-link">
                                                    <i class="far fa-star"></i> Booking Reference {{sep}} {{pnrInfo.Pnr}}
                                                </div>
                                            </li>
                                            <li class="nav-item">
                                                <div class="nav-link">
                                                    <i class="far fa-star"></i> Customer Name {{sep}} {{pnrInfo.CustomerName}}
                                                </div>
                                            </li>
                                            <li class="nav-item">
                                                <div class="nav-link">
                                                    <i class="far fa-clock"></i> Flight Details {{sep}} {{pnrInfo.TravelDateInfo }}
                                                </div>
                                            </li>
                                            <li class="nav-item">
                                                <div class="nav-link">
                                                    <i class="far fa-file-alt"></i> Ticket Numbers {{sep}} {{pnrInfo.TicketNumbers}}
                                                    <span class="badge bg-warning float-right">FA</span>
                                                </div>
                                            </li>
                                            <li class="nav-item">
                                                <div class="nav-link">
                                                    <i class="far fa-clock"></i> Ticketed Date {{sep}} {{pnrInfo.TicketedDateInfo}}
                                                </div>
                                            </li>
                                            <li class="nav-item">
                                                <div class="nav-link">
                                                    <i class="fas fa-filter"></i> Payments Status {{sep}} {{pnrInfo.PaymentStatus}}
                                                    <span class="badge bg-warning float-right" hidden>note</span>
                                                </div>
                                            </li>
                                            <li class="nav-item">
                                                <div class="nav-link">
                                                    <i class="fas fa-filter"></i> Payment Amount {{sep}} {{pnrInfo.PaymentCurrency}} {{pnrInfo.PaymentAmount}}
                                                </div>
                                            </li>
                                            <li class="nav-item">
                                                <div class="nav-link">
                                                    <i class="fas fa-filter"></i> Services Fare {{sep}} {{pnrInfo.PaymentCurrency}}  {{pnrInfo.ServicesFare}}
                                                </div>
                                            </li>


                                            <li class="nav-item">
                                                <div class="nav-link">
                                                    <i class="far fa-envelope"></i> E-Mail on PNR {{sep}} {{pnrInfo.EMailOnPnr}}
                                                    <span class="badge bg-warning float-right">APE</span>
                                                </div>
                                            </li>
                                            <li class="nav-item">
                                                <div class="nav-link">
                                                    <i class="far fa-envelope"></i> Contacts on PNR {{sep}} {{pnrInfo.ContactInfo}}
                                                    <span class="badge bg-warning float-right">APE</span>
                                                </div>
                                            </li>
                                            <li class="nav-item">
                                                <div class="nav-link">
                                                    <i class="far fa-clock"></i> Last Refresh {{sep}} {{pnrInfo.RecordCreatedDateTime}}
                                                </div>
                                            </li>
                                        </ul> <!-- Info List Fields -->
                                </div>
                                @* Modal for PNR View info *@

                                @*<div class="modal fade" id="modal-pnr">
                                    <div class="modal-dialog">
                                        <div class="modal-content bg-info">
                                            <div class="modal-header">
                                                <h3 class="modal-title">PNR : {{pnr}}</h3>
                                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                    <span aria-hidden="true">&times;</span>
                                                </button>
                                            </div>
                                            <div id="modal-pnr-text" class="modal-body">
                                                <ul class="nav nav-pills flex-column">
                                                    <li class="nav-item active">
                                                        <a href="#" class="nav-link">
                                                            <i class="fas fa-star"></i> Office Id : {{pnrInfo.OfficeId}}
                                                        </a>
                                                    </li>
                                                    <li class="nav-item">
                                                        <a href="#" class="nav-link">
                                                            <i class="far fa-star"></i> PNR Status : {{pnrInfo.Status}}
                                                        </a>
                                                    </li>
                                                    <li class="nav-item">
                                                        <a href="#" class="nav-link">
                                                            <i class="far fa-file-alt"></i> Ticket Numbers : {{pnrInfo.TicketNumbers}}
                                                            <span class="badge bg-warning float-right">FA</span>
                                                        </a>
                                                    </li>
                                                    <li class="nav-item">
                                                        <a href="#" class="nav-link">
                                                            <i class="fas fa-filter"></i> Payments Status : {{pnrInfo.PaymentStatus}}
                                                            <span class="badge bg-warning float-right" hidden>note</span>
                                                        </a>
                                                    </li>
                                                    <li class="nav-item">
                                                        <a href="#" class="nav-link">
                                                            <i class="fas fa-filter"></i> Payment Amount : {{pnrInfo.PaymentAmount}}
                                                        </a>
                                                    </li>
                                                    <li class="nav-item">
                                                        <a href="#" class="nav-link">
                                                            <i class="far fa-clock"></i> Ticketed Date : {{pnrInfo.TicketedDateInfo}}
                                                        </a>
                                                    </li>
                                                    <li class="nav-item">
                                                        <a href="#" class="nav-link">
                                                            <i class="far fa-clock"></i> Travel Date : {{pnrInfo.TravelDateInfo}}
                                                        </a>
                                                    </li>
                                                    <li class="nav-item">
                                                        <a href="#" class="nav-link">
                                                            <i class="far fa-envelope"></i> E-Mail on PNR : {{pnrInfo.EMailOnPnr}}
                                                            <span class="badge bg-warning float-right">APE</span>
                                                        </a>
                                                    </li>
                                                    <li class="nav-item">
                                                        <a href="#" class="nav-link">
                                                            <i class="far fa-clock"></i> Last Refresh : {{pnrInfo.RecordCreatedDateTime}}
                                                        </a>
                                                    </li>
                                                </ul>
                                            </div>
                                            <div class="modal-footer justify-content-between">
                                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close..</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>*@

                                <!-- /.modal -->

                            </div> <!-- PNR Info card -->

                            <div id="historyArea" class="card card-info">
                                <div class="card-header">
                                    <h3 class="card-title">Base Sender History</h3>
                                    <div class="card-tools">
                                        <button type="button" class="btn btn-tool" data-card-widget="collapse" data-toggle="tooltip" title="Collapse">
                                            <i class="fas fa-minus"></i>
                                        </button>
                                    </div>
                                </div>

                                <div class="card-body p-0" style="background-color:#f9f7f0">
                                    <ul class="nav nav-pills flex-column">

                                        <li class="nav-item" v-for="item in items">
                                            <a href="#" class="nav-link">
                                                <i class="far fa-file-alt"></i>
                                                <span title="Created by : 18893"><b>Incident Id : {{item.Id}}</b></span>
                                                <span class="badge btn-outline-info float-right">{{item.Status}}</span>
                                                <br />
                                                <span>{{item.BaseEmailSubject}}</span><br /><hr />
                                                <span>Created on: <i> {{ item.CreatedDate.split('T')[0] }} </i> </span> <br />
                                                <span>Created by: <i> {{item.CreatedStaff}} </i></span>
                                                <span class="badge bg-success float-right" v-on:click=GoToHistoryInc(item.Id) >View</span>
                                            </a>
                                        </li>

                                    </ul> <!-- Info List Fields -->
                                </div>

                            </div> <!-- Pax History Inc Card -->

                        </div>
                        <!-- /.col-md-6 -->
                    </div>
                    <!-- /.row -->
                </div><!-- /.container-fluid -->
                @* Modal for inc id view *@
                <div class="modal fade" id="modal-info">
                    <div class="modal-dialog modal-lg">
                        <div class="modal-content bg-white"> 
                            <div class="modal-header">
                                <h3 class="modal-title">Message Preview : </h3>
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div id="modal-body-text" class="modal-body">
                                Loading ...
                            </div>
                            <div class="modal-footer justify-content-between">
                                <button v-on:click="ClearModalInfo()" type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                            </div>
                        </div>
                        <!-- /.modal-content -->
                    </div>
                    <!-- /.modal-dialog -->
                </div>
                <!-- /.modal -->

            </div>
            <!-- /.content -->
        </div>
        <!-- /.content-wrapper -->
        <!-- Control Sidebar -->
        <aside class="control-sidebar control-sidebar-dark">
            <!-- Control sidebar content goes here -->
            <div class="p-3">
                <h5>Title</h5>
                <p>Sidebar content</p>
            </div>
        </aside>
        <!-- /.control-sidebar -->
        <!-- Main Footer -->
        @Html.Partial("_Footer")
    </div>
    <!-- ./wrapper -->
    <!-- REQUIRED SCRIPTS -->
    <!-- jQuery -->
    <script src="~/Content/plugins/jquery/jquery.min.js"></script>
    <!-- Bootstrap 4 -->
    <script src="~/Content/plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
    <!-- custom file input js -->
    <script src="~/Content/plugins/bs-custom-file-input/bs-custom-file-input.min.js"></script>
    <!-- DataTables -->
    <script src="~/Content/plugins/datatables/jquery.dataTables.min.js"></script>
    <script src="~/Content/plugins/datatables-bs4/js/dataTables.bootstrap4.min.js"></script>
    <script src="~/Content/plugins/datatables-responsive/js/dataTables.responsive.min.js"></script>
    <script src="~/Content/plugins/datatables-responsive/js/responsive.bootstrap4.min.js"></script>

    <!-- SweetAlert -->
    <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
    <!-- AdminLTE App -->
    <script src="~/Content/dist/js/adminlte.min.js"></script>
    <!-- AdminLTE for demo purposes -->
    <script src="~/Content/dist/js/demo.js"></script>
    <!-- Summernote -->
    <script src="~/Content/plugins/summernote/summernote-bs4.min.js"></script>

    <!-- Vue.js v2.6.11 -->
    <script src="~/Scripts/vue.js"></script>
    @*<script src="~/Scripts/vueComponents.js"></script>*@

    <script src="~/Scripts/app.js"></script>

    <!-- page script -->
    <script>
        document.getElementById("viewIncLink").classList.add('active');

        var baseInfoArea = new Vue({
        el: '#baseInfoArea',
        data: {
            baseInfo: {},
            createdDateTime : ''
        },
        created: function () {
            this.LoadBaseInfo();
        },
        mounted: function () {
            console.log('Mounted baseinfo');
            console.log(this.baseInfo.CreatedDate);
        },
        updated: function () {
            console.log('Updated baseinfo');
        },
        methods: {
            LoadBaseInfo: function () {
                 //data: {incidentId : 'some e-mail'}
                $.ajax({
                    method: "GET",
                    url: '@Url.Action("GetIncidentById", "TestServices")',
                    data: {incidentId : '@Session["IncidentId"]'}
                })
                .done(function (result) {
                    baseInfoArea.baseInfo = JSON.parse(result);
                    baseInfoArea.createdDateTime = baseInfoArea.GetSimpleDateTime(baseInfoArea.baseInfo.CreatedDate);

                    historyArea.LoadHistory(baseInfoArea.baseInfo.BaseEmail);
                })
                .fail(function (result) {
                    alert(result);
                });
            },
            GetSimpleDateTime: function (date) {
                var arr = date.split('T');
                var time = arr[1].split(':');
                return arr[0] + ' ( ' + time[0] + ':' + time[1] + ' HH )';
            },
            SaveBaseInfo: function () {

                $.ajax({
                    method: "POST",
                    url: '@Url.Action("UpdateIncident", "IncidentServices")',
                    data: this.baseInfo
                })
                .done(function (result) {
                    AppAlert(result);
                })
                .fail(function (result) {
                    alert(result);
                });
            }
        }
        });
    // OK Base //

    var attachmentsArea = new Vue({
        el: '#attachmentsArea',
        data: {
            items: []
        },
        created: function () {
            this.LoadAttachments('@Session["IncidentId"]' , 'Gen');
        },
        mounted: function () {

        },
        updated: function () {

        },
        methods: {
            LoadAttachments: function (incId , atchType) {

                $.ajax({
                    method: "GET",
                    url: '@Url.Action("GetAttachemntsByIncidentId", "TestServices")',
                    data: {incidentId : incId , type: atchType}
                })
                .done(function (result) {
                    attachmentsArea.items = JSON.parse(result);
                })
                .fail(function (result) {
                    alert(result);
                });
            },
            GetFileNameOnly: function (input) {
                var arr = input.split('\\');
                return arr[arr.length - 1];
            },
            GetFileSizeDynamic: function (input) {

                if (input < 1024) {
                    return (input + ' bytes');
                }
                else if (input >= 1024) {
                    input = Math.round(input / 1024);
                    if (input >= 1024) {
                        input = (input / 1024).toFixed(2);
                        return (input + ' Mb');
                    }
                    else {
                        return (input + ' Kb');
                    }
                }
            }
        }
    });

    var incidentLogsArea = new Vue({
        el: '#incidentLogsArea',
        data: {
            logs: []
        },
        created: function () {
            this.GetIncidentLogssByIncidentId();
        },
        mounted: function () {

        },
        updated: function () {
            console.log('Incident logs updated');

        },
        methods: {
            GetIncidentLogssByIncidentId: function () {
                 //data: {incidentId : 'some e-mail'}
                $.ajax({
                    method: "GET",
                    url: '@Url.Action("GetIncidentLogssByIncidentId", "IncidentServices")',
                    data: {incidentId : '@Session["IncidentId"]'}
                })
                .done(function (result) {
                    incidentLogsArea.logs = JSON.parse(result);
                    // replace direction for css styling
                    incidentLogsArea.logs.forEach(function (item) {
                        if (item.EmailDirection === 'In') {
                            item.EmailDirection = 'bg-yellow';
                        }
                        else {
                            item.EmailDirection = 'bg-green';
                        }
                    })
                })
                .fail(function (result) {
                    alert(result);
                });
            },
            PreviewBtnEvent: function (pathval) {
                //alert('Preview btn Clicked: ' + pathval);
                 $.ajax({
                    method: "GET",
                    url: '@Url.Action("PreviewIncidentLogMsg", "IncidentServices")',
                    data: {path : pathval}
                 })
                .done(function (result) {
                    result = JSON.parse(result);
                    document.getElementById("modal-body-text").innerHTML = result.htmlBody;
                    //console.log(result);
                })
                .fail(function (result) {
                    console.log(result);
                    alert(result.responseText);
                });
            },
            TestOpenMsg: function (pathval, IncId) {
                //alert('Noted Open Req: ' + pathval); return;
                 $.ajax({
                    method: "GET",
                    url: '@Url.Action("OpenIncidentLogMsg", "IncidentServices")',
                    data: {path : pathval , IncidentId : IncId}
                 })
                .done(function (result) {
                    console.log(result);
                })
                .fail(function (result) {
                    console.log(result);
                    alert(result.responseText);
                    errorMsg = result.responseText;
                });
            },
            ClearModalInfo: function () {
                document.getElementById("modal-body-text").innerHTML = ""; // todo Check
                console.log('modal cleared');
            }
        }
    });
    // Ok Inc Log
    var appCommentArea = new Vue({
        el: '#CommentArea',
        data: {
            message: 'Messages History',
            seen: false,
            items: []
        },
        created: function () {
            console.log('Vue comp created');
            this.LoadComments();
        },
        mounted: function () {
            console.log('Vue comp mounted');
        },
        updated: function () {
            console.log('Vue comp Updated: CommentArea');
        },
        methods: {
            LoadComments: function () {
                $.ajax({
                    method: "GET",
                    url: '@Url.Action("GetCommentListByIncidentId", "TestServices")',
                    data: {incidentId : '@Session["IncidentId"]'}
                })
                .done(function (result) {
                    appCommentArea.items = JSON.parse(result);
                })
                .fail(function (result) {
                    AppAlert(result , 'error');
                });
            }
        }
    });

    var historyArea = new Vue({
        el: '#historyArea',
        data: {
            items: [],
            baseEmail : baseInfoArea.baseInfo.baseEmail
        },
        created: function () {
            //this.LoadHistory(baseEmail);
        },
        mounted: function () {

        },
        updated: function () {

        },
        methods: {
            LoadHistory: function (baseEmailVal) {
                 //data: {incidentId : 'some e-mail'}
                historyArea.baseEmail = baseEmailVal;

                $.ajax({
                    method: "GET",
                    url: '@Url.Action("GetIncidentsByBaseEmail", "TestServices")',
                    data: {email : baseEmailVal}
                })
                .done(function (result) {
                    historyArea.items = JSON.parse(result);
                })
                .fail(function (result) {
                    alert(result);
                });
            },
            GoToHistoryInc : function (id) {
                var gotourl = '@Url.Action("IncidentView", "App", new { id = "xxxx"})';
                window.location.href = gotourl.replace('xxxx', id);
            }
        }
    });

    var sendResponseArea = new Vue({
        el: '#sendResponseArea',
        data: {
            items: [],
            f1: 25,
            templateId: 0,
            templateList: [] 
        },
        created: function () {
            this.LoadTemplateList();
            console.log('Mounted Template List. ');
        },
        mounted: function () {
            @*this.LoadMailAttachments('@Session["IncidentId"]' , '@Session["AttachmentRef"]');*@
            console.log('sendResponseArea - mounted');
            console.log('AttachmentRef : ' + '@Session["AttachmentRef"]');

            this.f1 = @Session["AttachmentRef"];
            console.log(this.f1);
        },
        updated: function () {

        },
        methods: {
            LoadMailAttachments: function (incId , refCode) {

                $.ajax({
                    method: "GET",
                    url: '@Url.Action("GetMailAttachemnts", "TestServices")',
                    data: {incidentId : incId , refCode: refCode}
                })
                .done(function (result) {
                    sendResponseArea.items = JSON.parse(result);
                })
                .fail(function (result) {
                    alert(result);
                });
            },
            GetFileNameOnly: function (input) {
                var arr = input.split('\\');
                return arr[arr.length - 1];
            },
            GetFileSizeDynamic: function (input) {

                if (input < 1024) {
                    return (input + ' bytes');
                }
                else if (input >= 1024) {
                    input = Math.round(input / 1024);
                    if (input >= 1024) {
                        input = (input / 1024).toFixed(2);
                        return (input + ' Mb');
                    }
                    else {
                        return (input + ' Kb');
                    }
                }
            },
            ClearInfo: function () {

                sendResponseArea.items = [];
                $("#ReplyToId").val("");
                $("#ReplyCCId").val("");
                $("#ReplyBCCId").val("");
                $("#ReplySubject").val("");
                //$("#ReplyText").val(loadInfo.body);
                var t2 = document.getElementsByClassName("note-editable card-block")[0];
                t2.innerHTML = "";
                sendResponseArea.ClearTempMailAttachments();
                this.f1 += 1;
            },
            ClearTempMailAttachments: function () {

                $.ajax({
                    method: "POST",
                    url: '@Url.Action("DiscardMailAttachemntsByRefCode", "TestServices")',
                    data: {refCode: this.f1}
                })
                .done(function (result) {
                    if (result != "Ok") {
                        alert('Some error occured.');
                    }
                })
                .fail(function (result) {
                    alert(result);
                });
            },
            DiscardUnsavedMailInfo: function () {
                alert('discarding for : ' + this.f1);
                sendResponseArea.ClearInfo();
                GetReplyInfo();
                alert(this.f1);
            },
            ReplyBtnEvent: function (type) {
                var t2 = document.getElementsByClassName("note-editable card-block")[0];
                //alert(t2.innerHTML); // .trim()

                var incId = '@Session["IncidentId"]';
                var postBody = {
                to: $("#ReplyToId").val(),
                subject: $("#ReplySubject").val(),
                cc: $("#ReplyCCId").val(),
                bcc: $("#ReplyBCCId").val(),
                body: t2.innerHTML,
                incidentId: incId,
                refCode : this.f1
            }
            if (type == 'rep') {
                postBody.cc = '';
                postBody.bcc = '';
            }
            //alert(JSON.stringify(postBody));
            console.log('Current RefCode: '+ this.f1)
            //SendMailViaApp ///  contentType: 'application/json; charset=utf-8',
            $.ajax({
                method: "POST",
                url: '@Url.Action("SendMailViaApp", "IncidentServices")',
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify(postBody)
            })
                .done(function (result) {
                    AppAlert(result);
                    incidentLogsArea.GetIncidentLogssByIncidentId();
                    sendResponseArea.ClearInfo();
                })
                .fail(function (result) {
                    alert(result);
                    alert('error');
                    console.log(result);
                });
            },
            FileUploadEventForMsg : function () {

                var fileUpload = document.getElementById("mailAttachment");
                var files = fileUpload.files;
                var IncidentId = @Session["IncidentId"];
                var AttachmentRef = this.f1;

                // Create FormData object
                var fileData = new FormData();
                for (var i = 0; i < files.length; i++) {
                    fileData.append(files[i].name, files[i]);
                }
                fileData.append('IncidentId', IncidentId);
                fileData.append('AttachmentRef', AttachmentRef);

                //alert('Starting to Upload mail Attachemnt');
                //alert(files[0].name + " : " + AttachmentRef);

                $.ajax({
                    method: "POST",
                    url: '@Url.Action("UploadMailAttachments", "TestServices")',
                    contentType: false,
                    processData:false,
                    data: fileData
                })
                    .done(function (result) {
                        AppAlert('Mail Attachment Added :' + result); // todo
                        sendResponseArea.LoadMailAttachments(IncidentId , AttachmentRef)
                    })
                    .fail(function (result) {
                        alert(result);
                    });
            },
            TemplateIdChange: function () {
                console.log('Template updated : ' + this.templateId);
                var msgBody = 'qwe123';

                
                $.ajax({
                    method: "GET",
                    url: '@Url.Action("GetMailTemplateBody", "IncidentServices")',
                    data: {TemplateId : this.templateId}
                })
                .done(function (result) {
                    document.getElementsByClassName("note-editable card-block")[0].innerHTML = JSON.parse(result);
                })
                .fail(function (result) {
                    alert(result);
                });

                //document.getElementsByClassName("note-editable card-block")[0].innerHTML = msgBody;
            },
            LoadTemplateList: function () {
                $.ajax({
                    method: "GET",
                    url: '@Url.Action("GetMailTemplates", "IncidentServices")',
                    data: {catId : 0}
                })
                .done(function (result) {
                    sendResponseArea.templateList = JSON.parse(result);
                })
                .fail(function (result) {
                    alert(result);
                });
            }
        }
    });

    var pnrInfoArea = new Vue({

        el: '#pnrInfoArea',
        data: {
            pnrInfo: {},
            pnr: '',
            sep : ''
        },
        created: function () {
        },
        mounted: function () {
            console.log('Mounted pnrInfoArea');
        },
        beforeUpdate : function () {
            if (this.pnr.length > 6) {
                this.pnr = this.pnr.substr(0,6);
            }
            console.log('beforeUpdate pnrInfoArea');
        },
        methods: {
            ClearPnrModalInfo: function () {
                //alert('Cleared PNR info. Todo');
                this.pnrInfo = {};
                console.log('Cleared PNR info.'); // Check them
            },
            WrongPnr: function () {
                if (this.pnr.length != 6) {
                    return true;
                }
            },
            GetPNRInfoDB: function () {
                if (this.WrongPnr()) {
                    AppAlert('Wrong Pnr !', 'error'); return;
                }
                $.ajax({
                    method: "GET",
                    url: '@Url.Action("GetPnrInfo", "PnrServices")',
                    data: {pnr : this.pnr}
                })
                .done(function (result) {
                    if (!result) {
                        AppAlert('No Info in DB', 'info'); return;
                    }
                    pnrInfoArea.pnrInfo = JSON.parse(result);
                    if (!pnrInfoArea.pnrInfo.TicketNumbers) {
                        pnrInfoArea.pnrInfo.CustomerName = "";
                    }
                    else {
                        pnrInfoArea.pnrInfo.CustomerName = pnrInfoArea.pnrInfo.TicketNumbers.replace(')','(').split('(')[1];
                    }
                    
                    pnrInfoArea.sep = ' : ';
                    pnrInfoArea.SetPnrDates();
                    AppAlert('PNR info loaded from DB');
                })
                .fail(function (result) {
                    alert(result);
                });
            },
            GetPnrInfoRealTime: function () {
                if (this.WrongPnr()) {
                    AppAlert('Wrong Pnr !', 'error'); return;
                }
                $.ajax({
                    method: "GET",
                    url: '@Url.Action("GetPnrInfoRealTime", "PnrServices")',
                    data: {pnr : this.pnr}
                })
                .done(function (result) {
                    pnrInfoArea.pnrInfo = JSON.parse(result);
                    pnrInfoArea.sep = ' : ';
                    pnrInfoArea.SetPnrDates();
                    AppAlert('PNR info loaded from Amadeus');
                })
                .fail(function (result) {
                    AppAlert('Information Not found !', 'error');
                    console.log(result);
                });
            },
            SetPnrDates: function () {
                //this.pnrInfo.TicketedDate = this.pnrInfo.TicketedDate.split('T')[0];
                //this.pnrInfo.TravelDate = this.pnrInfo.TravelDate.split('T')[0];
                var arr = this.pnrInfo.RecordCreatedDateTime.split('T');
                this.pnrInfo.RecordCreatedDateTime = arr[0] + ' ('+ arr[1].substring(0, 5) + ' HH)';
            }
        }
    });


    </script> <!-- Vue Components -->
    <script>
        var errorMsg;
        var repInfo;

        function AppAlert(msg, type) {
            if (!type) {type = 'success';}
            swal("App Notice", msg, type);
        }
        //var vueApp01 = new Vue({
        //    el: "#vueApp01",
        //    data: {
        //        message: "Loading...",
        //        incidents: []
        //    },
        //    updated: function () {
        //        $("#example1").DataTable({
        //            "responsive": true,
        //            "autoWidth": true
        //        });
        //    }
        //})

        function fun001(msg) {
            alert('You asked for : ' + msg);
        }

        $(function () {
            //LoadDataTable();
            bsCustomFileInput.init();
                //Add text editor
            $('#compose-textarea').summernote();
            repInfo = GetReplyInfo();
            //$("#tableAttachments").DataTable({
            //    "paging": false,
            //    "lengthChange": false,
            //    "searching": false,
            //    "ordering": false,
            //    "info": false,
            //    "autoWidth": true,
            //    "responsive": true,
            //});
        });

        function GetReplyInfo() {
            var loadInfo;

            var incId = '@Session["IncidentId"]';
            $.ajax({
                method: "GET",
                url: '@Url.Action("GetMailReplyInfoToReplyByIncidentId", "IncidentServices")',
                data: {incidentId : incId}
            })
                .done(function (result) {
                    if (result == null || result == "") {
                        return;
                    }
                    loadInfo = JSON.parse(result);
                    $("#ReplyToId").val(loadInfo.to);
                    $("#ReplyCCId").val(loadInfo.cc);
                    $("#ReplyBCCId").val(loadInfo.bcc);
                    $("#ReplySubject").val(loadInfo.subject);
                    //$("#ReplyText").val(loadInfo.body);

                    // ---- Skip loading: Dear {Client} // req By Ecom
                    var t2 = document.getElementsByClassName("note-editable card-block")[0];
                    t2.innerHTML = `
<p class="MsoNormal" style="background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><br></p><p class="MsoNormal" style="background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;"><b><span lang="EN-GB" style="font-size:9.0pt;font-family:&quot;Arial&quot;,sans-serif;color:#2E74B5;mso-ansi-language:
EN-GB">Regards</span></b><b><span lang="EN-GB" style="font-size:9.0pt;font-family:&quot;Arial&quot;,sans-serif;color:#2E74B5;mso-ansi-language:
EN-GB"><br></span></b></p><p class="MsoNormal"><b style="font-size: 1rem;"><span lang="EN-US" style="font-size:8.0pt;font-family:&quot;Open Sans&quot;;
color:darkblue;mso-ansi-language:EN-US">E-Commerce Team</span></b><span lang="EN-US" style="font-size: 8pt; font-family: Arial, sans-serif; color: darkblue;"> </span><span lang="EN-GB" style="font-size: 8pt; font-family: Arial, sans-serif; color: darkblue;">| SriLankan Airlines Ltd.<br><span style="font-size: 8pt;">Airline Centre, Bandaranaike International Airport, Katunayake, Sri Lanka.</span><span style="font-size: 10.6667px;"><br></span><span style="font-size: 10.6667px;">E-Mail:bookings@srilankan.com&nbsp;| Web:</span><span style="background-color: rgb(255, 255, 255); font-size: 10.6667px; color: blue;"><a href="http://www.srilankan.com/" target="_blank" style="background-color: rgb(255, 255, 255); font-size: 10.6667px;">&nbsp;www.srilankan.com</a></span></span>
</p>
`;
                    return loadInfo;
                })
                .fail(function (result) {
                    console.log(result);
                    //return postBody;
                });
        }

        function DiscardUnsavedMailInfo() {
            sendResponseArea.ClearInfo();
            alert('@Session["AttachmentRef"]');
            GetReplyInfo();
        }
    </script>

    <script>
        function ReplyBtnEvent(type) {

            alert('fuck im replaced');
            return;

            var t2 = document.getElementsByClassName("note-editable card-block")[0];
            alert(t2.innerHTML); // .trim()

            var incId = '@Session["IncidentId"]';
            var postBody = {
                to: $("#ReplyToId").val(),
                subject: $("#ReplySubject").val(),
                cc: $("#ReplyCCId").val(),
                bcc: $("#ReplyBCCId").val(),
                body: t2.innerHTML,
                incidentId: incId,
                refCode : '@Session["AttachmentRef"]'
            }
            if (type == 'rep') {
                postBody.cc = '';
                postBody.bcc = '';
            }
            alert(JSON.stringify(postBody));
            console.log('Current RefCode: '+'@Session["AttachmentRef"]')
            //SendMailViaApp
            $.ajax({
                method: "POST",
                url: '@Url.Action("SendMailViaApp", "IncidentServices")',
                data: postBody
            })
                .done(function (result) {
                    alert(result);
                    incidentLogsArea.GetIncidentLogssByIncidentId();
                    sendResponseArea.ClearInfo();
                })
                .fail(function (result) {
                    alert(result);
                    alert('error');
                    console.log(result);
                });
        }

    </script>

    <script>


        function LoadDataTable() {
            $.ajax({
                method: "GET",
                url: '@Url.Action("GetAllIncidents", "TestServices")'
            })
                .done(function (result) {
                    vueApp01.incidents = JSON.parse(result);
                    vueApp01.message = 'Loading Incidents Completed';
                })
                .fail(function (result) {
                    alert(result);
                });
        }

        function SendMailViaApp() {
            var t2 = document.getElementsByClassName("note-editable card-block")[0];
            alert(t2.innerHTML); // .trim()
        }

        

        function FileUploadEvent123(idVal , mailDirection) {

            var fileUpload = document.getElementById(idVal);
            var files = fileUpload.files;
            // Create FormData object
            var fileData = new FormData();
            for (var i = 0; i < files.length; i++) {
                fileData.append(files[i].name, files[i]);
            }
            fileData.append('EmailDirection', mailDirection);
            //alert(files[0].name + " : " + files.length);alert(idVal + " : " + mailDirection);

            $.ajax({
                method: "POST",
                url: '@Url.Action("SaveOutlookMsgForLogging", "IncidentServices")',
                contentType: false,
                processData:false,
                data: fileData
            })
                .done(function (result) {
                    if (result.includes('Saved')) {
                        incidentLogsArea.GetIncidentLogssByIncidentId();
                    }
                    if (baseInfoArea.baseInfo.Status == 'Closed' && mailDirection == "In") {
                        // Update Inc Status to 'Open'
                        baseInfoArea.baseInfo.Status = 'Open';
                        baseInfoArea.SaveBaseInfo();
                        console.log('Reopened Incident');
                    }
                })
                .fail(function (result) {
                })
                .always(function (result) {
                    document.getElementById(idVal).value = "";
                    document.getElementById(idVal + "Lable").textContent = 'Choose file';
                    AppAlert(result);
                });
        }

        function FuncAddComment() {

            $.ajax({
                method: "POST",
                url: '@Url.Action("SaveNewComment", "TestServices")',
                data: {
                    IncidentId: '@Session["IncidentId"]',
                    Comment: $("#commentText").val()
                }
            })
                .done(function (result) {
                    //LoadIncidentComments();
                    appCommentArea.LoadComments();
                    AppAlert('Saved. Comment ID: ' + result);
                    $("#commentText").val("");
                })
                .fail(function (result) {
                    AppAlert('Failed to add comment', 'error');
                });
        }

    function FileUploadEvent() {

        var fileUpload = document.getElementById("InputFileAtch");
        var files = fileUpload.files;
        // Create FormData object
        var fileData = new FormData();
        for (var i = 0; i < files.length; i++) {
            fileData.append(files[i].name, files[i]);
        }
        fileData.append('IncidentId', @Session["IncidentId"]);
        $.ajax({
            method: "POST",
            url: '@Url.Action("UploadAttachments", "TestServices")',
            contentType: false,
            processData:false,
            data: fileData
        })
            .done(function (result) {
                AppAlert('File Uploaded :' + result);
                attachmentsArea.LoadAttachments('@Session["IncidentId"]' , 'Gen');
            })
            .fail(function (result) {
                alert(result);
            });
        } // General File Upload

 // General File Upload
    </script>
</body>
</html>


